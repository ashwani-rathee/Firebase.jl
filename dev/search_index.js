var documenterSearchIndex = {"docs":
[{"location":"utility/#Utility-Functions","page":"Utility Functions","title":"Utility Functions","text":"","category":"section"},{"location":"utility/","page":"Utility Functions","title":"Utility Functions","text":"","category":"page"},{"location":"utility/","page":"Utility Functions","title":"Utility Functions","text":"Modules = [Firebase]\nPages   = [\"convert.jl\",\"firestore-token.jl\"]","category":"page"},{"location":"storage/#Cloud-Storage","page":"Cloud Storage","title":"Cloud Storage","text":"","category":"section"},{"location":"storage/","page":"Cloud Storage","title":"Cloud Storage","text":"","category":"page"},{"location":"storage/","page":"Cloud Storage","title":"Cloud Storage","text":"Modules = [Firebase]\nPages   = [\"cloudstorage.jl\"]","category":"page"},{"location":"storage/#Firebase.cloudstore_get","page":"Cloud Storage","title":"Firebase.cloudstore_get","text":"cloudstore_get(file2download = \"\")\n\nGet a file cloud storage\n\nExample\n\ninit(\"[PROJECT_SDK].json\")\ncloudstore_init(\"https://firebasestorage.googleapis.com/v0/b/[PROJECT_ID].appspot.com/o\")\ncloudstore_get(\"/audio/data.mp3\")\ncloudstore_get(\"/data.mp3\")\n\n\n\n\n\n","category":"function"},{"location":"storage/#Firebase.cloudstore_init-Tuple{Any}","page":"Cloud Storage","title":"Firebase.cloudstore_init","text":"cloudstore_init(url)\n\nSet cloud storage url initialize\n\nExample\n\ncloudstore_init(\"https://firebasestorage.googleapis.com/v0/b/[PROJECT_ID].appspot.com/o\")\n\n\n\n\n\n","category":"method"},{"location":"storage/#Firebase.cloudstore_sendfile","page":"Cloud Storage","title":"Firebase.cloudstore_sendfile","text":"cloudstore_sendfile(file2download = \"\")\n\nSend a file to cloud storage to store\n\nExample\n\ninit(\"[PROJECT_SDK].json\")\ncloudstore_init(\"https://firebasestorage.googleapis.com/v0/b/[PROJECT_ID].appspot.com/o\")\ncloudstore_sendfile(\"/audio/data.mp3\")\n\n\n\n\n\n","category":"function"},{"location":"authentication/#Cloud-Authentication","page":"Cloud Authentication","title":"Cloud Authentication","text":"","category":"section"},{"location":"authentication/","page":"Cloud Authentication","title":"Cloud Authentication","text":"","category":"page"},{"location":"authentication/","page":"Cloud Authentication","title":"Cloud Authentication","text":"Modules = [Firebase]\nPages   = [\"firebaseauth.jl\"]","category":"page"},{"location":"authentication/#Firebase.confirm_passwordreset-Tuple{}","page":"Cloud Authentication","title":"Firebase.confirm_passwordreset","text":"\n\n\n\n","category":"method"},{"location":"authentication/#Firebase.firebase_changeemail","page":"Cloud Authentication","title":"Firebase.firebase_changeemail","text":"firebasechangeemail(newemail=\"\",firebaseidtoken=  FIREBASEID_TOKEN)\n\nChange email You can change a user's email by issuing an  HTTP POST request to the Auth setAccountInfo endpoint.\n\nExample\n\njulia data = firebase_signin(\"ab669522@gmail.com,\"helloworld!!\") firebase_changeemail(\"ab6695221@gmail.com\",data[\"idToken\"]) data = firebase_signin(\"ab6695221@gmail.com,\"helloworld!!\") firebase_changeemail(\"ab669522@gmail.com\",data[\"idToken\"])`\n\n\n\n\n\n","category":"function"},{"location":"authentication/#Firebase.firebase_changepassword","page":"Cloud Authentication","title":"Firebase.firebase_changepassword","text":"firebasechangepassword(newpassword=\"\", firebaseidtoken=FIREBASEID_TOKEN)\n\nChange password You can change a user's password by issuing an  HTTP POST request to the Auth setAccountInfo endpoint.\n\nExample\n\njulia data = firebase_signin(\"ab669522@gmail.com\",\"helloworld!!\") firebase_changepassword(\"hellopaaji!!\",data[\"idToken\"]) data = firebase_signin(\"ab6695221@gmail.com\",\"hellopaaji!!\") firebase_changepassword(\"helloworld!!\",data[\"idToken\"])`\n\n\n\n\n\n","category":"function"},{"location":"authentication/#Firebase.firebase_confirmemailverify","page":"Cloud Authentication","title":"Firebase.firebase_confirmemailverify","text":"TODO: This does work yet\n\n\n\n\n\n","category":"function"},{"location":"authentication/#Firebase.firebase_deleteuser","page":"Cloud Authentication","title":"Firebase.firebase_deleteuser","text":"firebasedeleteuser(firebaseidtoken=FIREBASEID_TOKEN)\n\nDelete account You can delete a current user by issuing an HTTP POST request to the Auth deleteAccount endpoint.\n\nExample\n\ndata = firebase_signup(\"ashwani121231@gmail.com\",\"hello!!123\")\nfirebase_deleteuser(data[\"idToken\"])\n\n\n\n\n\n","category":"function"},{"location":"authentication/#Firebase.firebase_fetchproviders","page":"Cloud Authentication","title":"Firebase.firebase_fetchproviders","text":"firebase_fetchproviders(email=\"\")\n\nFetch providers for email You can look all providers associated with a specified email by  issuing an HTTP POST request to the Auth createAuthUri endpoint.\n\nExample\n\njulia> firebase_fetchproviders(\"ashwani1@gmail.com\")\n#= \nDict{String, Any} with 5 entries:\n  \"allProviders\"  => Any[\"password\"]\n  \"kind\"          => \"identitytoolkit#CreateAuthUriResponse\"\n  \"sessionId\"     => \"k8iBdCSLEeAbhhgKz6E4PC-ltCs\"\n  \"signinMethods\" => Any[\"password\"]\n  \"registered\"    => true\n=#\n\n\n\n\n\n","category":"function"},{"location":"authentication/#Firebase.firebase_getuserinfo","page":"Cloud Authentication","title":"Firebase.firebase_getuserinfo","text":"firebasegetuserinfo(firebaseidtoken=FIREBASEID_TOKEN)\n\nGet user data You can get a user's data by issuing an HTTP POST request to the Auth getAccountInfo endpoint.\n\nExample\n\ndata = firebase_signin(\"ab669522@gmail.com\",\"helloworld!!\")\nfirebase_getuserinfo(data[\"idToken\"])\n\n\n\n\n\n","category":"function"},{"location":"authentication/#Firebase.firebase_linkoauth-Tuple{}","page":"Cloud Authentication","title":"Firebase.firebase_linkoauth","text":"Link with OAuth credential You can link an OAuth credential to a user by  issuing an HTTP POST request to the Auth verifyAssertion endpoint.\n\n\n\n\n\n","category":"method"},{"location":"authentication/#Firebase.firebase_linkuserinfo","page":"Cloud Authentication","title":"Firebase.firebase_linkuserinfo","text":"Link with email/password You can link an email/password to a current user by issuing an  HTTP POST request to the Auth setAccountInfo endpoint.\n\nExample\n\ndata = firebase_signin(\"ab669522@gmail.com\",\"helloworld!!\")\nfirebase_linkuserinfo(\"ash@gmail.com\", \"hello!!123as\",data[\"idToken\"])\ndata = firebase_signin(\"ash@gmail.com\", \"hello!!123as\")\nfirebase_linkuserinfo(\"ab669522@gmail.com\",\"helloworld!!\",data[\"idToken\"])\n\n\n\n\n\n","category":"function"},{"location":"authentication/#Firebase.firebase_passwordreset","page":"Cloud Authentication","title":"Firebase.firebase_passwordreset","text":"firebase_passwordreset(email=\"ab669522@gmail.com\")\n\nSend password reset email You can send a password reset email by  issuing an HTTP POST request to the Auth getOobConfirmationCode endpoint.\n\nExample\n\nfirebase_passwordreset(email=\"ab669522@gmail.com\")\n# email will recieve the reset password email\n\n\n\n\n\n","category":"function"},{"location":"authentication/#Firebase.firebase_signin","page":"Cloud Authentication","title":"Firebase.firebase_signin","text":"firebase_signin(email::String=\"data\", password::String=\"data\", returnSecureToken::Bool= true)\n\nSign in with email / password You can sign in a user with an email and password by issuing an HTTP POST request to the Auth verifyPassword endpoint.\n\nExample\n\nfirebase_signin(\"ashwani1@gmail.com\" , \"hello1231!!\")\n#=\nDict{String, Any} with 8 entries:\n  \"refreshToken\" => \"AGEhc0C1F9smilhBPdT5TYClumCwdzGI9q43s5r-MsqW-bJTeiIw1doG7zRF_VMX2a0WELR3zRB…\n  \"kind\"         => \"identitytoolkit#VerifyPasswordResponse\"\n  \"localId\"      => \"zgrI4g3ualVJW7IEiRlPFg5jItA2\"\n  \"displayName\"  => \"\"\n  \"idToken\"      => \"eyJhbGciOiJSUzI1NiIsImtpZCI6ImRjNGQwMGJjM2NiZWE4YjU0NTMzMWQxZjFjOTZmZDRlNjd…\n  \"registered\"   => true\n  \"expiresIn\"    => \"3600\"\n  \"email\"        => \"ashwani1@gmail.com\"\n=#\n\n\n\n\n\n","category":"function"},{"location":"authentication/#Firebase.firebase_signinanon","page":"Cloud Authentication","title":"Firebase.firebase_signinanon","text":"firebase_signinanon(returnSecureToken::Bool= true)\n\nSign in anonymously You can sign in a user anonymously by issuing an HTTP POST request to the Auth signupNewUser endpoint.\n\nExampleemail::String=\"\", password::String=\"\",\n\njulia> firebase_signinanon()\n#=\nDict{String, Any} with 5 entries:\n  \"refreshToken\" => \"AGEhc0DiE1zelLdCW2KG9wMRwZKcZI6EuSef4hsIc6uOZp0I3SYUTf0Hib_XgvtgY1yeqgFNqJ0…\n  \"kind\"         => \"identitytoolkit#SignupNewUserResponse\"\n  \"localId\"      => \"3T8r7DD99zO9qKL1k56boC2iiXF2\"\n  \"expiresIn\"    => \"3600\"\n  \"idToken\"      => \"eyJhbGciOiJSUzI1NiIsImtpZCI6ImRjNGQwMGJjM2NiZWE4YjU0NTMzMWQxZjFjOTZmZDRlNjd…\n=#\n\n\n\n\n\n","category":"function"},{"location":"authentication/#Firebase.firebase_signinoauth-Tuple{}","page":"Cloud Authentication","title":"Firebase.firebase_signinoauth","text":"firebase_signinoauth()\n\nSign in with OAuth credential You can sign in a user with an OAuth credential by issuing  an HTTP POST request to the Auth verifyAssertion endpoint.\n\nThis doesn't work today\n\nExample\n\nfirebase_signinoauth()\n\n\n\n\n\n","category":"method"},{"location":"authentication/#Firebase.firebase_signup","page":"Cloud Authentication","title":"Firebase.firebase_signup","text":"firebase_signup(email::String=\"\", password::String=\"\", returnSecureToken::Bool= true)\n\nSign up with email / password You can create a new email and password user by issuing an HTTP POST request to the Auth  signupNewUser endpoint.\n\nExample\n\nset_webapikey(\"WEB_API_KEY\")\nfirebase_signup(\"ashwani@gmail.com\",\"hello!!\")\n#=\nDict{String, Any} with 6 entries:\n  \"refreshToken\" => \"AGEhc0AjgXJevwy_rkJ3r4VUHc4EEORngVF-rwEtOuO007AymRqbAzVnn1iAMCZNHqzwnCI1X8fkJ0OPE2fTuGN7ameU6P7SmibwIFs8sOZxUI8C_uklOkk1IG5DFdWXAC45mK_0Hy4tuJXJUvI8Kuy6LS-GERZ5Bc…\n  \"kind\"         => \"identitytoolkit#SignupNewUserResponse\"\n  \"localId\"      => \"GRCBj28Pkhat0mYsJS0BVrlVmJd2\"\n  \"expiresIn\"    => \"3600\"\n  \"idToken\"      => \"eyJhbGciOiJSUzI1NiIsImtpZCI6ImRjNGQwMGJjM2NiZWE4YjU0NTMzMWQxZjFjOTZmZDRlNjdjNTFlODkiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vZmlyLWp…\n  \"email\"        => \"ashwani@gmail.com\"\n=#\n\n\n\n\n\n","category":"function"},{"location":"authentication/#Firebase.firebase_unlinkprovide","page":"Cloud Authentication","title":"Firebase.firebase_unlinkprovide","text":"Unlink provider You can unlink a provider from a current user by issuing an HTTP POST request to the Auth setAccountInfo endpoint.\n\nExample\n\nset_webapikey()\n\ndata = firebase_signup(\"ashwani12123@gmail.com\",\"hello!!123\")\n#=\nDict{String, Any} with 6 entries:\n  \"refreshToken\" => \"AGEhc0A4Y-wFC0S2Cub-7TY2XNfZMYQf-YKzTdQWl9_SjrRpUW4d3QymQy5P1EN4Me8-SE695sPE_MBXoMoqTzKLy76nBvDGmybGmP4wnWLyrJql-HfoVPRtG1emeJ3E61DnDbUIZOvV-Y3GuzpJ57XZojHBM1aoMp…\n  \"kind\"         => \"identitytoolkit#SignupNewUserResponse\"\n  \"localId\"      => \"neXn8Mg562VFgENRtA2SEC0NEBk1\"\n  \"expiresIn\"    => \"3600\"\n  \"idToken\"      => \"eyJhbGciOiJSUzI1NiIsImtpZCI6ImRjNGQwMGJjM2NiZWE4YjU0NTMzMWQxZjFjOTZmZDRlNjdjNTFlODkiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vZmlyLWp…\n  \"email\"        => \"ashwani12123@gmail.com\"\n=#\nfirebase_unlinkprovide(data[\"idToken\"], \"google.com\")\n#=\nDict{String, Any} with 6 entries:\n  \"kind\"             => \"identitytoolkit#SetAccountInfoResponse\"\n  \"localId\"          => \"neXn8Mg562VFgENRtA2SEC0NEBk1\"\n  \"passwordHash\"     => \"UkVEQUNURUQ=\"\n  \"emailVerified\"    => false\n  \"providerUserInfo\" => Any[Dict{String, Any}(\"rawId\"=>\"ashwani12123@gmail.com\", \"providerId\"=>\"password\", \"federatedId\"=>\"ashwani12123@gmail.com\", \"email\"=>\"ashwani12123@gmail.com\")]\n  \"email\"            => \"ashwani12123@gmail.com\"\n=#\n\n\n\n\n\n","category":"function"},{"location":"authentication/#Firebase.firebase_updateprofile","page":"Cloud Authentication","title":"Firebase.firebase_updateprofile","text":"Update profile You can update a user's profile (display name / photo URL) by issuing an  HTTP POST request to the Auth setAccountInfo endpoint.\n\nTODO: delete attribute\n\nExample\n\njulia data = firebase_signin(\"ab669522@gmail.com\",\"helloworld!!\") firebase_updateprofile(\"ash\",\"https://i.imgur.com/zgDkgSR.jpeg\",data[\"idToken\"]) #=        Dict{String, Any} with 8 entries:   \"kind\"             => \"identitytoolkit#SetAccountInfoResponse\"   \"photoUrl\"         => \"https://i.imgur.com/zgDkgSR.jpeg\"   \"localId\"          => \"GovyExPqFWS70uynnuBzVnYgLAi2\"   \"displayName\"      => \"ash\"   \"passwordHash\"     => \"UkVEQUNURUQ=\"   \"emailVerified\"    => false   \"providerUserInfo\" => Any[Dict{String, Any}(\"rawId\"=>\"ab669522@gmail.com\", \"photoUrl\"=>\"https:…   \"email\"            => \"ab669522@gmail.com\" =#\n\n\n\n\n\n","category":"function"},{"location":"authentication/#Firebase.firebase_verifyemail","page":"Cloud Authentication","title":"Firebase.firebase_verifyemail","text":"firebaseverifyemail(firebaseidtoken=FIREBASEID_TOKEN)\n\nSend email verification You can send an email verification for the current user by issuing an HTTP POST request to the Auth getOobConfirmationCode endpoint.\n\nExample\n\ndata = firebase_signin(\"ab669522@gmail.com\",\"helloworld!!\")\nfirebase_verifyemail((data[\"idToken\"])\n\n\n\n\n\n","category":"function"},{"location":"authentication/#Firebase.set_webapikey","page":"Cloud Authentication","title":"Firebase.set_webapikey","text":"set_webapikey(key =\"\")\n\nsets WEBAPIKEY\n\nExample\n\nset_webapikey(\"asjdlajsj1j32lj312\")\n\n\n\n\n\n","category":"function"},{"location":"authentication/#Firebase.verify_passwordresetcode-Tuple{}","page":"Cloud Authentication","title":"Firebase.verify_passwordresetcode","text":"verify_passwordresetcode()\n\nVerify password reset code You can verify a password reset code by issuing an  HTTP POST request to the Auth resetPassword endpoint.\n\nExample\n\n\n\n\n\n\n\n","category":"method"},{"location":"firestore/#Cloud-Firestore","page":"Cloud Firestore","title":"Cloud Firestore","text":"","category":"section"},{"location":"firestore/","page":"Cloud Firestore","title":"Cloud Firestore","text":"","category":"page"},{"location":"firestore/","page":"Cloud Firestore","title":"Cloud Firestore","text":"Modules = [Firebase]\nPages   = [\"firestore.jl\"]","category":"page"},{"location":"firestore/#Firebase.firestore_batchget","page":"Cloud Firestore","title":"Firebase.firestore_batchget","text":"firestore_batchget(batch=body)\n\nGets multiple documents Documents returned by this method are not guaranteed  to be returned in the same order that they were requested.\n\nExample\n\ninit(\"[FIREBASE_ADMIN_SDK].json\")\nres = firestore_batchget()\n\n\n\n\n\n","category":"function"},{"location":"firestore/#Firebase.firestore_batchwrite","page":"Cloud Firestore","title":"Firebase.firestore_batchwrite","text":"firestore_batchwrite(batch=body)\n\nApplies a batch of write operations. The documents.batchWrite method does not apply the write operations atomically and can apply them out of order. Method does not allow more than one write per document.  Each write succeeds or fails independently. See the BatchWriteResponse for the success  status of each write.\n\nIf you require an atomically applied set of writes, use documents.commit instead.\n\nExample\n\ninit(\"[FIREBASE_ADMIN_SDK].json\")\nres = firestore_batchwrite()\n\n\n\n\n\n","category":"function"},{"location":"firestore/#Firebase.firestore_beginTransaction-Tuple{}","page":"Cloud Firestore","title":"Firebase.firestore_beginTransaction","text":"firestore_beginTransaction()\n\nStarts a new transaction. \"options\" The options for the transaction. Defaults to a read-write transaction.\n\nExample\n\ninit(\"[FIREBASE_ADMIN_SDK].json\")\nfirestore_beginTransaction()\n\n\n\n\n\n","category":"method"},{"location":"firestore/#Firebase.firestore_commit","page":"Cloud Firestore","title":"Firebase.firestore_commit","text":"firestore_commit(transactionid=\"\",body =body)\n\nCommits a transaction, while optionally updating documents.\n\nExample\n\ninit(\"[FIREBASE_ADMIN_SDK].json\")\ndata = firestore_beginTransaction()\nfirestore_commit(data[\"transaction\"])\n\n\n\n\n\n","category":"function"},{"location":"firestore/#Firebase.firestore_createdoc","page":"Cloud Firestore","title":"Firebase.firestore_createdoc","text":"firestore_createdoc(url, body)\n\nExample\n\ninit(\"[FIREBASE_ADMIN_SDK].json\")\nfirestore_createdoc(\"/firebase_test/firebase_post/two\") \nfirestore_createdoc(\"/firebase_test/firebase_post/three\";query =\"hello\") # with document id name in query\n\n\n\n\n\n","category":"function"},{"location":"firestore/#Firebase.firestore_deletedoc-Tuple{Any}","page":"Cloud Firestore","title":"Firebase.firestore_deletedoc","text":"firestore_deletedoc(url)\n\nDeletes a document\n\nExample\n\ninit(\"[FIREBASE_ADMIN_SDK].json\")\nfirestore_createdoc(\"/firebase_test/firebase_post/three\";query =\"hello\") # creates the document and then we delete it\nfirestore_deletedoc(\"/firebase_test/firebase_post/three/hello\")\n\n\n\n\n\n","category":"method"},{"location":"firestore/#Firebase.firestore_getcollectionids-Tuple{Any}","page":"Cloud Firestore","title":"Firebase.firestore_getcollectionids","text":"firestore_getcollectionids(url;query=\"\")\n\nLists all the collection IDs underneath a document.\n\nExample\n\ninit(\"[FIREBASE_ADMIN_SDK].json\")\nfirestore_getcollectionids(\"/firebase_test/firebase_post\")\n\n\n\n\n\n","category":"method"},{"location":"firestore/#Firebase.firestore_getdoclist-Tuple{Any}","page":"Cloud Firestore","title":"Firebase.firestore_getdoclist","text":"firestore_getdoclist(url)\n\nLists documents\n\nExample\n\ninit(\"[FIREBASE_ADMIN_SDK].json\")\nfirestore_getdoclist(\"/firebase_test\")\n\n\n\n\n\n","category":"method"},{"location":"firestore/#Firebase.firestore_partitionquery","page":"Cloud Firestore","title":"Firebase.firestore_partitionquery","text":"firestore_partitionquery(url)\n\nPartitions a query by returning partition cursors that can be used to run the query in parallel. The returned partition cursors are  split points that can be used by documents.runQuery as starting/end points for the query results.\n\n\n\n\n\n","category":"function"},{"location":"firestore/#Firebase.firestore_patch","page":"Cloud Firestore","title":"Firebase.firestore_patch","text":"firestore_patch()\n\nUpdates or inserts a document.\n\nExample\n\ninit(\"[FIREBASE_ADMIN_SDK].json\")\nfirestore_patch(\"/firebase_test/firebase_patch\")\n\n\n\n\n\n","category":"function"},{"location":"firestore/#Firebase.firestore_runquery","page":"Cloud Firestore","title":"Firebase.firestore_runquery","text":"firestore_runquery()\n\nRuns a query.\n\nExample\n\ninit(\"[FIREBASE_ADMIN_SDK].json\")\nfirestore_runquery(\"/firebase_test/firebase_post\")\n\n\n\n\n\n","category":"function"},{"location":"firestore/#Firebase.get_request-Tuple{String}","page":"Cloud Firestore","title":"Firebase.get_request","text":"get_request(url::String)\n\nGet request which is general in nature and gets any document or collection\n\nExample\n\ninit(\"[FIREBASE_ADMIN_SDK].json\")\nres = get_request(\"/firebase_test/firebase_get\") # document get\nres = get_request(\"/firebase_test/firebase_get/firebase_get_collection\") # collection fetch\n\n\n\n\n\n","category":"method"},{"location":"#Firebase.jl-:-Julia-Firebase","page":"Home","title":"Firebase.jl : Julia Firebase","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Firebase","category":"page"},{"location":"","page":"Home","title":"Home","text":"Julia's Interface to Firebase REST API","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.clone(\"https://github.com/ashwani-rathee/Firebase.jl.git\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Firebase]\nPages   = [\"Firebase.jl\"]","category":"page"},{"location":"#Reference","page":"Home","title":"Reference","text":"","category":"section"},{"location":"realtime/#Realtime-Database","page":"Realtime Database","title":"Realtime Database","text":"","category":"section"},{"location":"realtime/","page":"Realtime Database","title":"Realtime Database","text":"","category":"page"},{"location":"realtime/#Realtime-Database-2","page":"Realtime Database","title":"Realtime Database","text":"","category":"section"},{"location":"realtime/","page":"Realtime Database","title":"Realtime Database","text":"Initializing the realdb for the base url, reduces the effort later","category":"page"},{"location":"realtime/","page":"Realtime Database","title":"Realtime Database","text":"realdbinit(\"https://fir-jl-457eb-default-rtdb.asia-southeast1.firebasedatabase.app\")\nBase Url set:\"https://fir-jl-457eb-default-rtdb.asia-southeast1.firebasedatabase.app\"","category":"page"},{"location":"realtime/#GET-Reading-Data","page":"Realtime Database","title":"GET - Reading Data","text":"","category":"section"},{"location":"realtime/","page":"Realtime Database","title":"Realtime Database","text":"Data from your Realtime Database can be read by issuing an HTTP GET request to an endpoint. The following example demonstrates how you might retrieve a user's name that you had previously stored in Realtime Database.","category":"page"},{"location":"realtime/","page":"Realtime Database","title":"Realtime Database","text":"julia> realdb_get(\"/firebase_test\")\nulia> realdb_get(\"/firebase_test\")\nFINAL URL: \"https://fir-jl-457eb-default-rtdb.asia-southeast1.firebasedatabase.app/firebase_test.json\"\nGET successful\nDict{String, Any} with 3 entries:\n  \"firebase_get\"  => Dict{String, Any}(\"firebase_get_3\"=>3, \"firebase_get_2\"=>2, \"firebase_get_1\"=>1)\n  \"firebase_new\"  => Dict{String, Any}(\"-McEjFxupzSbZwojItzL\"=>Dict{String, Any}(\"name\"=>\"real_db_test\"), \"-McEjCHubimhfipKm2yo\"=>Dict{String, Any}(\"name\"=>\"real_db_test\"), \"-McEjNy8-8VjqSH3P8dO\"=>Dict{String, Any}…\n  \"firebase_post\" => Dict{String, Any}(\"firebase_post_1\"=>1, \"firebase_post_3\"=>3, \"firebase_post_2\"=>2, \"input\"=>Dict{String, Any}(\"-McEQ7vGcvji7Myab182\"=>Dict{String, Any}(\"stockAmount\"=>350, \"price\"=>\"7.5 TL\", \"…\n","category":"page"},{"location":"realtime/#POST-Pushing-Data","page":"Realtime Database","title":"POST - Pushing Data","text":"","category":"section"},{"location":"realtime/","page":"Realtime Database","title":"Realtime Database","text":"To accomplish the equivalent of the JavaScript push() method (see Lists of Data), you can issue a POST request. A successful request is indicated by a 200 OK HTTP status code. The response contains the child name of the new data specified in the POST request.","category":"page"},{"location":"realtime/","page":"Realtime Database","title":"Realtime Database","text":"julia> realdb_post(\"/firebase_test/firebase_new\")\nFINAL URL: \"https://fir-jl-457eb-default-rtdb.asia-southeast1.firebasedatabase.app/firebase_test/firebase_new.json\"\nPOST successful\nDict{String, Any} with 1 entry:\n  \"name\" => \"-McEkk8qvdT4UHSUQALx\"\n\njulia> realdb_post(\"/firebase_test/firebase_new/\",\"\"\"{\"hello\":1}\"\"\")\nFINAL URL: \"https://fir-jl-457eb-default-rtdb.asia-southeast1.firebasedatabase.app/firebase_test/firebase_new.json\"\nPOST successful\nDict{String, Any} with 1 entry:\n  \"name\" => \"-McElRx3ZBP-l7pCF0LN\"","category":"page"},{"location":"realtime/#DELETE-Removing-Data","page":"Realtime Database","title":"DELETE - Removing Data","text":"","category":"section"},{"location":"realtime/","page":"Realtime Database","title":"Realtime Database","text":"You can delete data with a DELETE request A successful DELETE request is indicated by a 200 OK HTTP status code with a response containing JSON null.","category":"page"},{"location":"realtime/","page":"Realtime Database","title":"Realtime Database","text":"julia> realdb_delete(\"/firebase_test/firebase_new\")\nhttps://fir-jl-457eb-default-rtdb.asia-southeast1.firebasedatabase.app/firebase_test/firebase_new.json\nDELETE successful","category":"page"},{"location":"realtime/#PUT-Writing-Data","page":"Realtime Database","title":"PUT - Writing Data","text":"","category":"section"},{"location":"realtime/","page":"Realtime Database","title":"Realtime Database","text":"You can write data with a PUT request. A successful request is indicated by a 200 OK HTTP status code. The response contains the data specified in the PUT request.","category":"page"},{"location":"realtime/","page":"Realtime Database","title":"Realtime Database","text":"julia> realdb_put(\"/firebase_test/firebase_new/\",\"\"\"{\"hello\":1}\"\"\")\nFINAL URL: \"https://fir-jl-457eb-default-rtdb.asia-southeast1.firebasedatabase.app/firebase_test/firebase_new.json\"\nPUT successful\nDict{String, Any} with 1 entry:\n  \"name\" => \"-McElRx3ZBP-l7pCF0LN\"","category":"page"},{"location":"realtime/","page":"Realtime Database","title":"Realtime Database","text":"Modules = [Firebase]\nPages   = [\"realtime.jl\"]","category":"page"},{"location":"realtime/#Firebase.readdb_download","page":"Realtime Database","title":"Firebase.readdb_download","text":"readdb_download(url, filename = \"test\"; query = Dict())\n\nDownload request\n\nExample\n\n\n\n\n\n\n\n","category":"function"},{"location":"realtime/#Firebase.realdb_delete","page":"Realtime Database","title":"Firebase.realdb_delete","text":"realdbdelete(url, body = Dict(\"name\"=> \"realdb_test\"); query = Dict())\n\nDELETE request to an endpoint\n\nExample\n\nrealdb_init(\"https://[PROJECT_ID].asia-southeast1.firebasedatabase.app\")\nrealdb_delete(\"/users/jack/name/last\")\n\n\n\n\n\n","category":"function"},{"location":"realtime/#Firebase.realdb_get-Tuple{Any}","page":"Realtime Database","title":"Firebase.realdb_get","text":"realdb_get(url; query = Dict())\n\nGET request to an endpoint.\n\nExample\n\nrealdb_init(\"https://[PROJECT_ID].asia-southeast1.firebasedatabase.app\")\nrealdb_get(\"/users/jack/name\")\n\n\n\n\n\n","category":"method"},{"location":"realtime/#Firebase.realdb_init-Tuple{Any}","page":"Realtime Database","title":"Firebase.realdb_init","text":"realdbinit(baseurl; query = Dict())\n\nInitialize the realtimedb with baseurl to make things easier\n\nExample\n\nrealdb_init(\"https://[PROJECT_ID].asia-southeast1.firebasedatabase.app\")\n\n\n\n\n\n","category":"method"},{"location":"realtime/#Firebase.realdb_patch","page":"Realtime Database","title":"Firebase.realdb_patch","text":"realdbpatch(url, body = Dict(\"name\"=> \"realdb_test\"); query = Dict())\n\nPATCH request to an endpoint.\n\nExample\n\nrealdb_init(\"https://[PROJECT_ID].asia-southeast1.firebasedatabase.app\")\nbody =Dict(\"last\"=>\"Jones\")\nrealdb_patch(\"/users/jack/name/\",body)\n\n\n\n\n\n","category":"function"},{"location":"realtime/#Firebase.realdb_post","page":"Realtime Database","title":"Firebase.realdb_post","text":"realdbpost(url, body = \"{\"name\": \"realdb_test\"}\"; query = Dict())\n\nPOST request to an endpoint.\n\nExample\n\nrealdb_init(\"https://[PROJECT_ID].asia-southeast1.firebasedatabase.app\")\n# realdb_post(\"/message_list\")\nbody =Dict(\"user_id\" => \"jack\", \"text\" => \"Ahoy!\")\nrealdb_post(\"/message_list\",body)\n\nNotes:\n\nAccording to the REST API documentation for Realtime Database,  a POST is the equivalent of a \"push\" operation when using the client SDKs. This push operation always involves adding data under a random ID.  There is no avoiding that for a push.\n\nIf you know the name of the node where you want to add data, you should use a PUT instead. This is the equivalent of using \"set\" operation with the client SDKs.\n\n\n\n\n\n","category":"function"},{"location":"realtime/#Firebase.realdb_put","page":"Realtime Database","title":"Firebase.realdb_put","text":"realdbput(url, body = Dict(\"name\"=> \"realdb_test\"); query = Dict())\n\nPUT request to a endpoint.\n\nExample\n\nrealdb_init(\"https://[PROJECT_ID].asia-southeast1.firebasedatabase.app\")\nbody = Dict(\"first\"=>\"Ash\", \"last\"=>\"Sparrow\")\nrealdb_put(\"/users/jack/name\",body)\n\n\n\n\n\n","category":"function"}]
}
